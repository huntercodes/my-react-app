{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\my-react-app\\\\src\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  headerTitle = 'My List',\n  placeholderText = 'Enter a value...',\n  buttonText = \"Add to List\",\n  clearButtonText = 'Clear List',\n  emptyAddError = 'Please enter a value before adding to the list.',\n  emptyClearError = 'The list is already empty.',\n  description = 'This is your dynamic list.'\n}) => {\n  _s();\n  const listInput = useRef(null);\n  const lastItemRef = useRef(null); // last added item\n  const [listObject, setListObject] = useState({\n    listEntries: [],\n    listItems: []\n  });\n\n  // effect to sync headerTitle with the number of list items\n  useEffect(() => {\n    headerTitle = 'You have ${listObject.listEntries.length} items in your list';\n  }, [listObject.listEntries]);\n  const addToListHandler = () => {\n    if (!listInput.current.value.trim()) {\n      alert(emptyAddError);\n      listInput.current.focus();\n      return;\n    }\n    const currentListEntries = [...listObject.listEntries, listInput.current.value];\n\n    // assign and highlight last item\n    const currentListItems = currentListEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [entry, \" ref=\", index === currentListEntries.length - 1 ? lastItemRef : null, \" style=\", index === currentListEntries.length - 1 ? {\n        backgroundColor: '#f0f8ff'\n      } : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this));\n    setListObject({\n      listEntries: currentListEntries,\n      listItems: currentListItems\n    });\n    listInput.current.value = '';\n    listInput.current.focus();\n  };\n  const clearListHandler = () => {\n    if (listObject.listEntries.length === 0) {\n      alert(emptyClearError);\n      listInput.current.focus();\n      return;\n    }\n    setListObject({\n      listEntries: [],\n      listItems: []\n    });\n    listInput.current.value = '';\n    listInput.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: headerTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: listInput,\n      placeholder: placeholderText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addToListHandler,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearListHandler,\n      children: clearButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: listObject.listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"xTsSNJ7g+MZmqj5yYM61oEvad0M=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","List","headerTitle","placeholderText","buttonText","clearButtonText","emptyAddError","emptyClearError","description","_s","listInput","lastItemRef","listObject","setListObject","listEntries","listItems","addToListHandler","current","value","trim","alert","focus","currentListEntries","currentListItems","map","entry","index","children","length","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","clearListHandler","ref","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/react/my-react-app/src/List.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({\r\n    headerTitle = 'My List',\r\n    placeholderText = 'Enter a value...',\r\n    buttonText = \"Add to List\",\r\n    clearButtonText = 'Clear List',\r\n    emptyAddError = 'Please enter a value before adding to the list.',\r\n    emptyClearError = 'The list is already empty.',\r\n    description = 'This is your dynamic list.',\r\n}) => {\r\n    const listInput = useRef(null);\r\n    const lastItemRef = useRef(null); // last added item\r\n    const [listObject, setListObject] = useState({\r\n        listEntries: [],\r\n        listItems: [],\r\n    });\r\n\r\n    // effect to sync headerTitle with the number of list items\r\n    useEffect(() => {\r\n        headerTitle = 'You have ${listObject.listEntries.length} items in your list';\r\n    }, [listObject.listEntries]);\r\n    \r\n\r\n    const addToListHandler = () => {\r\n        if (!listInput.current.value.trim()) {\r\n            alert(emptyAddError);\r\n            listInput.current.focus();\r\n            return;\r\n        }\r\n\r\n        const currentListEntries = [...listObject.listEntries, listInput.current.value];\r\n\r\n        // assign and highlight last item\r\n        const currentListItems = currentListEntries.map((entry, index) => (\r\n            <li key={index}>{entry} ref={index === currentListEntries.length - 1 ? lastItemRef : null} style={index === currentListEntries.length - 1 ? {backgroundColor: '#f0f8ff' } : null}\r\n            </li>\r\n        ));\r\n        setListObject({ listEntries: currentListEntries, listItems: currentListItems });\r\n        listInput.current.value = '';\r\n        listInput.current.focus();\r\n    };\r\n\r\n    const clearListHandler = () => {\r\n        if (listObject.listEntries.length === 0) {\r\n            alert(emptyClearError);\r\n            listInput.current.focus();\r\n            return;\r\n        }\r\n\r\n        setListObject({ listEntries: [], listItems: [] });\r\n        listInput.current.value = ''\r\n        listInput.current.focus();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>{headerTitle}</h3>\r\n            <input ref={listInput} placeholder={placeholderText}></input>\r\n            <button onClick={addToListHandler}>{buttonText}</button>\r\n            <button onClick={clearListHandler}>{clearButtonText}</button>\r\n            <h4>{description}</h4>\r\n            <ol>{listObject.listItems}</ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}